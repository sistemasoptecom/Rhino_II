//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SaludSystemWCF.Sql
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class infotec_webEntities : DbContext
    {
        public infotec_webEntities()
            : base("name=infotec_webEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<admin> admin { get; set; }
        public DbSet<agudeza_visual> agudeza_visual { get; set; }
        public DbSet<articulos01> articulos01 { get; set; }
        public DbSet<bancos> bancos { get; set; }
        public DbSet<cargos> cargos { get; set; }
        public DbSet<centros> centros { get; set; }
        public DbSet<citas_aperturas> citas_aperturas { get; set; }
        public DbSet<citas01> citas01 { get; set; }
        public DbSet<citas01_cancelada> citas01_cancelada { get; set; }
        public DbSet<consulta01> consulta01 { get; set; }
        public DbSet<departamentos> departamentos { get; set; }
        public DbSet<especialidades> especialidades { get; set; }
        public DbSet<grupos> grupos { get; set; }
        public DbSet<histintercons> histintercons { get; set; }
        public DbSet<histo_evento_adverso> histo_evento_adverso { get; set; }
        public DbSet<histo_incapacidad> histo_incapacidad { get; set; }
        public DbSet<histordenes> histordenes { get; set; }
        public DbSet<histordenesotras> histordenesotras { get; set; }
        public DbSet<historia01a> historia01a { get; set; }
        public DbSet<historias> historias { get; set; }
        public DbSet<insumosdefault> insumosdefault { get; set; }
        public DbSet<medicos01> medicos01 { get; set; }
        public DbSet<medicoshora_variable> medicoshora_variable { get; set; }
        public DbSet<municipio> municipio { get; set; }
        public DbSet<notas_uci> notas_uci { get; set; }
        public DbSet<paciente> paciente { get; set; }
        public DbSet<procedimiento_compuesto> procedimiento_compuesto { get; set; }
        public DbSet<procedimientos> procedimientos { get; set; }
        public DbSet<programaspyp> programaspyp { get; set; }
        public DbSet<referencia> referencia { get; set; }
        public DbSet<series> series { get; set; }
        public DbSet<sistema> sistema { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<tarifas> tarifas { get; set; }
        public DbSet<terceros> terceros { get; set; }
        public DbSet<usuario> usuario { get; set; }
        public DbSet<usuario_afiliado> usuario_afiliado { get; set; }
        public DbSet<usuario02> usuario02 { get; set; }
        public DbSet<actividadadeseconom> actividadadeseconom { get; set; }
        public DbSet<causa> causa { get; set; }
        public DbSet<consulta02> consulta02 { get; set; }
        public DbSet<diagnosticos> diagnosticos { get; set; }
    
        public virtual ObjectResult<LISTAR_citas_Result> LISTAR_citas(string codigo_med, Nullable<System.DateTime> fecha)
        {
            var codigo_medParameter = codigo_med != null ?
                new ObjectParameter("codigo_med", codigo_med) :
                new ObjectParameter("codigo_med", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LISTAR_citas_Result>("LISTAR_citas", codigo_medParameter, fechaParameter);
        }
    
        public virtual ObjectResult<PANEL_PACIENTE_Result> PANEL_PACIENTE(string codigo, string cod_admin)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var cod_adminParameter = cod_admin != null ?
                new ObjectParameter("cod_admin", cod_admin) :
                new ObjectParameter("cod_admin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PANEL_PACIENTE_Result>("PANEL_PACIENTE", codigoParameter, cod_adminParameter);
        }
    
        public virtual ObjectResult<SALUD_citas_anteriores_Result> SALUD_citas_anteriores(string codigo, Nullable<System.DateTime> fecha)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_citas_anteriores_Result>("SALUD_citas_anteriores", codigoParameter, fechaParameter);
        }
    
        public virtual ObjectResult<SALUD_citas_aperturas_medicos_disponibles_Result> SALUD_citas_aperturas_medicos_disponibles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_citas_aperturas_medicos_disponibles_Result>("SALUD_citas_aperturas_medicos_disponibles");
        }
    
        public virtual ObjectResult<SALUD_citas_confirmacion_Result> SALUD_citas_confirmacion(string codigo, Nullable<System.DateTime> fecha)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_citas_confirmacion_Result>("SALUD_citas_confirmacion", codigoParameter, fechaParameter);
        }
    
        public virtual ObjectResult<string> SALUD_citas_disponibles(Nullable<System.DateTime> lcfechacita, string lccod_med, string codigo)
        {
            var lcfechacitaParameter = lcfechacita.HasValue ?
                new ObjectParameter("lcfechacita", lcfechacita) :
                new ObjectParameter("lcfechacita", typeof(System.DateTime));
    
            var lccod_medParameter = lccod_med != null ?
                new ObjectParameter("lccod_med", lccod_med) :
                new ObjectParameter("lccod_med", typeof(string));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SALUD_citas_disponibles", lcfechacitaParameter, lccod_medParameter, codigoParameter);
        }
    
        public virtual ObjectResult<SALUD_citas_x_cod_med_Result> SALUD_citas_x_cod_med(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_citas_x_cod_med_Result>("SALUD_citas_x_cod_med", codigoParameter);
        }
    
        public virtual ObjectResult<SALUD_citas_x_codigo_Result> SALUD_citas_x_codigo(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_citas_x_codigo_Result>("SALUD_citas_x_codigo", codigoParameter);
        }
    
        public virtual ObjectResult<SALUD_citas_x_fecha_medico_Result> SALUD_citas_x_fecha_medico(Nullable<System.DateTime> fecha, string codigo_med)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var codigo_medParameter = codigo_med != null ?
                new ObjectParameter("codigo_med", codigo_med) :
                new ObjectParameter("codigo_med", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_citas_x_fecha_medico_Result>("SALUD_citas_x_fecha_medico", fechaParameter, codigo_medParameter);
        }
    
        public virtual ObjectResult<SALUD_control_pacientes_Result> SALUD_control_pacientes(Nullable<System.DateTime> fecha, string codigo_med)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var codigo_medParameter = codigo_med != null ?
                new ObjectParameter("codigo_med", codigo_med) :
                new ObjectParameter("codigo_med", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_control_pacientes_Result>("SALUD_control_pacientes", fechaParameter, codigo_medParameter);
        }
    
        public virtual int SALUD_COPIA_HORARIO_MEDICO(string medico1, string medico2)
        {
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var medico2Parameter = medico2 != null ?
                new ObjectParameter("medico2", medico2) :
                new ObjectParameter("medico2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SALUD_COPIA_HORARIO_MEDICO", medico1Parameter, medico2Parameter);
        }
    
        public virtual ObjectResult<SALUD_especialidades_disponibles_Result> SALUD_especialidades_disponibles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_especialidades_disponibles_Result>("SALUD_especialidades_disponibles");
        }
    
        public virtual ObjectResult<SALUD_GETMEDICO_Result> SALUD_GETMEDICO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_GETMEDICO_Result>("SALUD_GETMEDICO");
        }
    
        public virtual ObjectResult<SALUD_informe_indicador_oportunidad_Result> SALUD_informe_indicador_oportunidad(string medico1, string especialidad, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("especialidad", especialidad) :
                new ObjectParameter("especialidad", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_informe_indicador_oportunidad_Result>("SALUD_informe_indicador_oportunidad", medico1Parameter, especialidadParameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual int SALUD_informe_prioritaria(string codigo, string cod_medi, Nullable<System.DateTime> fechaini, Nullable<System.DateTime> fechafin)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            var cod_mediParameter = cod_medi != null ?
                new ObjectParameter("cod_medi", cod_medi) :
                new ObjectParameter("cod_medi", typeof(string));
    
            var fechainiParameter = fechaini.HasValue ?
                new ObjectParameter("fechaini", fechaini) :
                new ObjectParameter("fechaini", typeof(System.DateTime));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SALUD_informe_prioritaria", codigoParameter, cod_mediParameter, fechainiParameter, fechafinParameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_citas_Asignadas_Result> SALUD_INFORMES_citas_Asignadas(string paciente1, string medico1, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var paciente1Parameter = paciente1 != null ?
                new ObjectParameter("paciente1", paciente1) :
                new ObjectParameter("paciente1", typeof(string));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_citas_Asignadas_Result>("SALUD_INFORMES_citas_Asignadas", paciente1Parameter, medico1Parameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_citas_Control_Result> SALUD_INFORMES_citas_Control(string paciente1, string medico1, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var paciente1Parameter = paciente1 != null ?
                new ObjectParameter("paciente1", paciente1) :
                new ObjectParameter("paciente1", typeof(string));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_citas_Control_Result>("SALUD_INFORMES_citas_Control", paciente1Parameter, medico1Parameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_citas_Cumplidas_Result> SALUD_INFORMES_citas_Cumplidas(string paciente1, string medico1, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var paciente1Parameter = paciente1 != null ?
                new ObjectParameter("paciente1", paciente1) :
                new ObjectParameter("paciente1", typeof(string));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_citas_Cumplidas_Result>("SALUD_INFORMES_citas_Cumplidas", paciente1Parameter, medico1Parameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_citas_Incumplidas_Result> SALUD_INFORMES_citas_Incumplidas(string paciente1, string medico1, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var paciente1Parameter = paciente1 != null ?
                new ObjectParameter("paciente1", paciente1) :
                new ObjectParameter("paciente1", typeof(string));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_citas_Incumplidas_Result>("SALUD_INFORMES_citas_Incumplidas", paciente1Parameter, medico1Parameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_citas_Prioritaria_Result> SALUD_INFORMES_citas_Prioritaria(string paciente1, string medico1, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var paciente1Parameter = paciente1 != null ?
                new ObjectParameter("paciente1", paciente1) :
                new ObjectParameter("paciente1", typeof(string));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_citas_Prioritaria_Result>("SALUD_INFORMES_citas_Prioritaria", paciente1Parameter, medico1Parameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_citas_Usuario_Result> SALUD_INFORMES_citas_Usuario(Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2, string usuario)
        {
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_citas_Usuario_Result>("SALUD_INFORMES_citas_Usuario", fecha1Parameter, fecha2Parameter, usuarioParameter);
        }
    
        public virtual ObjectResult<SALUD_INFORMES_LIST_CANCELACION_Result> SALUD_INFORMES_LIST_CANCELACION(string paciente1, string medico1, Nullable<System.DateTime> fecha1, Nullable<System.DateTime> fecha2)
        {
            var paciente1Parameter = paciente1 != null ?
                new ObjectParameter("paciente1", paciente1) :
                new ObjectParameter("paciente1", typeof(string));
    
            var medico1Parameter = medico1 != null ?
                new ObjectParameter("medico1", medico1) :
                new ObjectParameter("medico1", typeof(string));
    
            var fecha1Parameter = fecha1.HasValue ?
                new ObjectParameter("fecha1", fecha1) :
                new ObjectParameter("fecha1", typeof(System.DateTime));
    
            var fecha2Parameter = fecha2.HasValue ?
                new ObjectParameter("fecha2", fecha2) :
                new ObjectParameter("fecha2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_INFORMES_LIST_CANCELACION_Result>("SALUD_INFORMES_LIST_CANCELACION", paciente1Parameter, medico1Parameter, fecha1Parameter, fecha2Parameter);
        }
    
        public virtual ObjectResult<SALUD_medicos_disponibles_Result> SALUD_medicos_disponibles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_medicos_disponibles_Result>("SALUD_medicos_disponibles");
        }
    
        public virtual ObjectResult<SALUD_medicos_disponibles_x_servicios_Result> SALUD_medicos_disponibles_x_servicios(Nullable<System.DateTime> lcfechacita, string lccod_espec)
        {
            var lcfechacitaParameter = lcfechacita.HasValue ?
                new ObjectParameter("lcfechacita", lcfechacita) :
                new ObjectParameter("lcfechacita", typeof(System.DateTime));
    
            var lccod_especParameter = lccod_espec != null ?
                new ObjectParameter("lccod_espec", lccod_espec) :
                new ObjectParameter("lccod_espec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_medicos_disponibles_x_servicios_Result>("SALUD_medicos_disponibles_x_servicios", lcfechacitaParameter, lccod_especParameter);
        }
    
        public virtual ObjectResult<SALUD_Ordenes_Farmaceuticas_Result> SALUD_Ordenes_Farmaceuticas(Nullable<int> numero)
        {
            var numeroParameter = numero.HasValue ?
                new ObjectParameter("numero", numero) :
                new ObjectParameter("numero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SALUD_Ordenes_Farmaceuticas_Result>("SALUD_Ordenes_Farmaceuticas", numeroParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
